class Solution {
public:
    void sortColors(vector<int>& nums) {

//method 1 use sort inbuilt function
//sort(nums.begin(), nums.end());

// //method 2

// int count_0=0;
// int count_1=0;
// int count_2=0;

// //counting number of zeroes, ones and twos

//     for(int i=0; i<nums.size(); i++){
//         if(nums[i]==0){
//             count_0 ++;
//         }

//         if(nums[i]==1){
//             count_1 ++;
//         }

//         if(nums[i]==2){
//             count_2 ++;
//         }
//     }

// //feeding values in array

//     for(int i=0; i<count_0; i++){
//         nums[i]=0;
//     }
//     for(int i=count_0; i<count_1+count_0; i++){
//         nums[i]=1;
//     }
//     for(int i=count_1+count_0; i<count_1+count_0+count_2; i++){
//         nums[i]=2;
//     }


//method 3 - Dutch Flag Algorithm
//what are we actually doing 

int low=0;
int high =nums.size()-1;
int mid=0;

while(mid<=high){

    if(nums[mid]==0){
        swap(nums[low], nums[mid]);
        low++;
        mid++;
    }

    else if(nums[mid]==1){
        mid++;
    }

    else if(nums[mid]==2){
        swap(nums[mid], nums[high]);
        high--;
    }




}

        
    }
};
