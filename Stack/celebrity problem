//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution 
{
    
    private:
    
    bool knows(vector<vector<int> >& M, int i, int j){
        
        if (M[i][j]==1){
            return true;
        }
        else return false;
    }
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        // code here 
        //i for row and j for column;
        
        //brute force method
        
        
         for (int i=0; i<n; i++){
		 bool celeb = true;
		 for (int j=0;j<n;j++){
			 //when i==j just let it pass
			if(j==i){
				 continue;
			 }
			 //i knows j but j does not know i;
			if (knows(M,i,j)||!knows(M,j,i)){
				celeb = false;
				break;
			}

		 }
		 if(celeb){
			 return i;
		 }
	 }

	 return -1;
        
        
        
        
        
        
        
        
        
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}

// } Driver Code Ends
